name: Build Real APK

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-pip openjdk-17-jdk zip unzip git
        
    - name: Install Buildozer and Kivy
      run: |
        pip3 install buildozer kivy requests dnspython colorama urllib3
        
    - name: Accept Android licenses
      run: |
        mkdir -p ~/.android/licenses
        echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > ~/.android/licenses/android-sdk-license
        echo "d56f5187479451eabf01fb78af6dfcb131a6481e" >> ~/.android/licenses/android-sdk-license
        
    - name: Create main.py using Python
      run: |
        python3 -c "
        content = '''# -*- coding: utf-8 -*-
from kivy.app import App
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.label import Label
from kivy.uix.textinput import TextInput
from kivy.uix.button import Button
from kivy.uix.scrollview import ScrollView
import socket

class ScannerApp(App):
    def build(self):
        self.title = \\\"Subdomain Scanner\\\"
        main_layout = BoxLayout(orientation='vertical', padding=10, spacing=10)
        
        # Input section
        input_layout = BoxLayout(orientation='vertical', size_hint=(1, 0.2))
        input_layout.add_widget(Label(text='Enter Domain:', size_hint=(1, 0.5)))
        self.domain_input = TextInput(hint_text='example.com', multiline=False, size_hint=(1, 0.5))
        input_layout.add_widget(self.domain_input)
        main_layout.add_widget(input_layout)
        
        # Button
        self.scan_button = Button(text='START SCAN', size_hint=(1, 0.1), background_color=(0, 0.5, 1, 1))
        self.scan_button.bind(on_press=self.start_scan)
        main_layout.add_widget(self.scan_button)
        
        # Results
        self.results_label = Label(text='No scan results yet...', text_size=(None, None), size_hint_y=None)
        self.results_label.bind(size=self.results_label.setter('text_size'))
        
        scrollview = ScrollView(size_hint=(1, 0.7))
        scrollview.add_widget(self.results_label)
        main_layout.add_widget(scrollview)
        
        return main_layout
    
    def start_scan(self, instance):
        domain = self.domain_input.text.strip()
        if not domain:
            self.results_label.text = \\\"Please enter a domain\\\"
            return
        
        self.scan_button.text = \\\"SCANNING...\\\"
        self.results_label.text = f\\\"Scanning {domain}...\\\"
        
        try:
            results = []
            # Check main domain
            try:
                ip = socket.gethostbyname(domain)
                results.append(f\\\"✓ {domain} -> {ip}\\\")
            except:
                results.append(f\\\"✗ {domain} -> Not reachable\\\")
            
            # Check subdomains
            subdomains = ['www', 'mail', 'ftp', 'admin']
            for sub in subdomains:
                full_domain = f\\\"{sub}.{domain}\\\"
                try:
                    ip = socket.gethostbyname(full_domain)
                    results.append(f\\\"✓ {full_domain} -> {ip}\\\")
                except:
                    pass
            
            self.results_label.text = \\\"\\\\n\\\".join(results)
        except Exception as e:
            self.results_label.text = f\\\"Error: {str(e)}\\\"
        
        self.scan_button.text = \\\"SCAN AGAIN\\\"

if __name__ == '__main__':
    ScannerApp().run()
'''
        with open('main.py', 'w') as f:
            f.write(content)
        "
        
    - name: Create buildozer.spec
      run: |
        buildozer init || true
        echo '[app]' > buildozer.spec
        echo 'title = Subdomain Scanner' >> buildozer.spec
        echo 'package.name = subdomainscanner' >> buildozer.spec
        echo 'package.domain = org.ghost.scanner' >> buildozer.spec
        echo 'source.dir = .' >> buildozer.spec
        echo 'source.include_exts = py,png,jpg,kv,atlas,txt' >> buildozer.spec
        echo 'version = 1.0' >> buildozer.spec
        echo 'requirements = python3,kivy,requests,dnspython,colorama,urllib3' >> buildozer.spec
        echo 'orientation = portrait' >> buildozer.spec
        echo '' >> buildozer.spec
        echo '[buildozer]' >> buildozer.spec
        echo 'log_level = 2' >> buildozer.spec
        echo '' >> buildozer.spec
        echo '[app:android]' >> buildozer.spec
        echo 'api = 33' >> buildozer.spec
        echo 'minapi = 21' >> buildozer.spec
        echo 'android.allow_backup = True' >> buildozer.spec
        echo 'android.accept_sdk_license = True' >> buildozer.spec
        
    - name: Build the APK
      run: |
        buildozer android clean
        buildozer -v android debug
      
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: subdomain-scanner-apk
        path: bin/*.apk
        retention-days: 30
